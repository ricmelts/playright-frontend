version: '3.8'

services:
  # PocketBase Database & Auth
  pocketbase:
    image: spectado/pocketbase:latest
    container_name: playright-pocketbase
    restart: unless-stopped
    ports:
      - "8090:8090"
    volumes:
      - ./pocketbase/pb_data:/pb/pb_data
      - ./pocketbase/pb_migrations:/pb/pb_migrations
      - ./pocketbase/pb_hooks:/pb/pb_hooks
    environment:
      - PB_ENCRYPTION_KEY=${PB_ENCRYPTION_KEY:-default-key-change-in-production}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and background jobs
  redis:
    image: redis:7-alpine
    container_name: playright-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend Service
  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: playright-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=${NODE_ENV:-development}
      - POCKETBASE_URL=http://pocketbase:8090
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
    volumes:
      - ./api-server:/app
      - ./logs:/app/logs
    depends_on:
      pocketbase:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Engine Service (Python ML)
  ai-engine:
    build:
      context: ./ai-engine
      dockerfile: Dockerfile
    container_name: playright-ai
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - POCKETBASE_URL=http://pocketbase:8090
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_CACHE_DIR=/app/model_cache
    volumes:
      - ./ai-engine:/app
      - ai_models_cache:/app/model_cache
      - ./logs:/app/logs
    depends_on:
      pocketbase:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background worker for async tasks
  worker:
    build:
      context: ./api-server
      dockerfile: Dockerfile.worker
    container_name: playright-worker
    restart: unless-stopped
    environment:
      - POCKETBASE_URL=http://pocketbase:8090
      - REDIS_URL=redis://redis:6379
      - INSTAGRAM_CLIENT_ID=${INSTAGRAM_CLIENT_ID}
      - INSTAGRAM_CLIENT_SECRET=${INSTAGRAM_CLIENT_SECRET}
      - TIKTOK_CLIENT_KEY=${TIKTOK_CLIENT_KEY}
      - TIKTOK_CLIENT_SECRET=${TIKTOK_CLIENT_SECRET}
    volumes:
      - ./api-server:/app
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      pocketbase:
        condition: service_healthy
    command: python -m celery worker -A app.worker.celery --loglevel=info

volumes:
  redis_data:
  ai_models_cache:

networks:
  default:
    name: playright-network